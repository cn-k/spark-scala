[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.8 (Oracle Corporation Java 18.0.1.1)
[debug] Load.defaultLoad until apply took 143.4009ms
[debug]           Load.loadUnit: plugins took 117.0017ms
[debug]           Load.loadUnit: defsScala took 0.363399ms
[debug] [Loading] Scanning directory C:\Users\cnk_a\Desktop\PROJECTS\java\spark-scala\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\cnk_a\Desktop\PROJECTS\java\spark-scala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 22.0105 ms
[debug]               Load.resolveProject(spark-scala-build) took 71.628701ms
[debug]             Load.loadTransitive: finalizeProject(Project(id spark-scala-build, base: C:\Users\cnk_a\Desktop\PROJECTS\java\spark-scala\project, plugins: List(<none>))) took 120.2429ms
[debug] [Loading] Done in C:\Users\cnk_a\Desktop\PROJECTS\java\spark-scala\project, returning: (spark-scala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 147.954301ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.2378ms
[debug]         Load.loadUnit(file:/C:/Users/cnk_a/Desktop/PROJECTS/java/spark-scala/project/, ...) took 278.8152ms
[debug]       Load.apply: load took 515.417701ms
[debug]       Load.apply: resolveProjects took 4.7046ms
[debug]       Load.apply: finalTransforms took 58.661799ms
[debug]       Load.apply: config.delegates took 7.3417ms
[debug]       Load.apply: Def.make(settings)... took 492.8433ms
[debug]       Load.apply: structureIndex took 112.2049ms
[debug]       Load.apply: mkStreams took 1.4608ms
[info] loading project definition from C:\Users\cnk_a\Desktop\PROJECTS\java\spark-scala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2140.178ms
[debug]     Load.loadUnit: defsScala took 0.0076ms
[debug] [Loading] Scanning directory C:\Users\cnk_a\Desktop\PROJECTS\java\spark-scala
[debug]       Load.loadUnit: mkEval took 3.383199ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 6.4428 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 7.064601ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\cnk_a\Desktop\PROJECTS\java\spark-scala, plugins: List(<none>))) took 17.081301ms
[debug] [Loading] Done in C:\Users\cnk_a\Desktop\PROJECTS\java\spark-scala, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 4151.363799ms
[debug]     Load.loadUnit: cleanEvalClasses took 47.7422ms
[debug]   Load.loadUnit(file:/C:/Users/cnk_a/Desktop/PROJECTS/java/spark-scala/, ...) took 6343.218901ms
[debug] Load.apply: load took 6391.3825ms
[debug] Load.apply: resolveProjects took 0.4408ms
[debug] Load.apply: finalTransforms took 32.0083ms
[debug] Load.apply: config.delegates took 1.3688ms
[debug] Load.apply: Def.make(settings)... took 337.2197ms
[debug] Load.apply: structureIndex took 106.4379ms
[debug] Load.apply: mkStreams took 0.006ms
[info] set current project to spark-scala (in build file:/C:/Users/cnk_a/Desktop/PROJECTS/java/spark-scala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-075b0e2ea7dd585c5295
[debug] Writing bsp connection file
[info] started sbt server
